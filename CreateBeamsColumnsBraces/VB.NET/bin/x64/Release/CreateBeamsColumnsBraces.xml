<?xml version="1.0"?>
<doc>
<assembly>
<name>
CreateBeamsColumnsBraces
</name>
</assembly>
<members>
<member name="P:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.Command.ColumnMaps">
 <summary>
 list of all type of columns
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.Command.BeamMaps">
 <summary>
 list of all type of beams
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.Command.BraceMaps">
 <summary>
 list of all type of braces
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.Command.Execute(Autodesk.Revit.UI.ExternalCommandData,System.String@,Autodesk.Revit.DB.ElementSet)">
 <summary>
 Implement this method as an external command for Revit.
 </summary>
 <param name="revit">An object that is passed to the external application 
 which contains data related to the command, 
 such as the application object and active view.</param>
 <param name="message">A message that can be set by the external application 
 which will be displayed if a failure or cancellation is returned by 
 the external command.</param>
 <param name="elements">A set of elements to which the external application 
 can add elements that are to be highlighted in case of failure or cancellation.</param>
 <returns>Return the status of the external command. 
 A result of Succeeded means that the API external method functioned as expected. 
 Cancelled can be used to signify that the user cancelled the external operation 
 at some point. Failure should be returned if the application is unable to proceed with 
 the operation.</returns>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.Command.AddInstance(System.Object,System.Object,System.Object,System.Int32)">
 <summary>
 check the number of floors is less than the number of levels, 
 create beams, columns abd braces according to selected types
 </summary>
 <param name="columnObject">type of column</param>
 <param name="beamObject">type of beam</param>
 <param name="braceObject">type of brace</param>
 <param name="floorNumber">number of floor</param>
 <returns>number of floors is less than the number of levels and create successfully then return true</returns>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.Command.CreateMatrix(System.Int32,System.Int32,System.Double)">
 <summary>
 generate 2D coordinates of matrix according to parameters
 </summary>
 <param name="xNumber">Number of Columns in the X direction</param>
 <param name="yNumber">Number of Columns in the Y direction</param>
 <param name="distance">Distance between columns</param>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.Command.Initialize">
 <summary>
 iterate all the symbols of levels, columns, beams and braces 
 </summary>
 <returns>A value that signifies if the initialization was successful for true or failed for false</returns>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.Command.PlaceColumn(Autodesk.Revit.DB.UV,Autodesk.Revit.DB.FamilySymbol,Autodesk.Revit.DB.Level,Autodesk.Revit.DB.Level)">
 <summary>
 create column of certain type in certain position
 </summary>
 <param name="point2D">2D coordinate of the col umn</param>
 <param name="columnType">type of column</param>
 <param name="baseLevel">the base level of the column</param>
 <param name="topLevel">the top level of the column</param>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.Command.PlaceBeam(Autodesk.Revit.DB.UV,Autodesk.Revit.DB.UV,Autodesk.Revit.DB.Level,Autodesk.Revit.DB.Level,Autodesk.Revit.DB.FamilySymbol)">
 <summary>
 create beam of certain type in certain position
 </summary>
 <param name="point2D1">one point of the location line in 2D</param>
 <param name="point2D2">another point of the location line in 2D</param>
 <param name="baseLevel">the base level of the beam</param>
 <param name="topLevel">the top level of the beam</param>
 <param name="beamType">type of beam</param>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.Command.PlaceBrace(Autodesk.Revit.DB.UV,Autodesk.Revit.DB.UV,Autodesk.Revit.DB.Level,Autodesk.Revit.DB.Level,Autodesk.Revit.DB.FamilySymbol,System.Boolean)">
 <summary>
 create brace of certain type in certain position between two adjacent columns
 </summary>
 <param name="point2D1">one point of the location line in 2D</param>
 <param name="point2D2">another point of the location line in 2D</param>
 <param name="baseLevel">the base level of the brace</param>
 <param name="topLevel">the top level of the brace</param>
 <param name="braceType">type of beam</param>
 <param name="isXDirection">whether the location line is in x direction</param>
 <remarks></remarks>
</member>
<member name="T:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.SymbolMap">
 <summary>
 assistant class contains the symbol and its name
 </summary>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.SymbolMap.#ctor">
 <summary>
 constructor without parameter is forbidden
 </summary>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.SymbolMap.#ctor(Autodesk.Revit.DB.FamilySymbol)">
 <summary>
 constructor
 </summary>
 <param name="symbol">family symbol</param>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.CreateBeamsColumnsBracesForm.OKButton_Click(System.Object,System.EventArgs)">
 <summary>
 accept use's input and create columns, beams and braces
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.CreateBeamsColumnsBracesForm.cancelButton_Click(System.Object,System.EventArgs)">
 <summary>
 cancel the command
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.CreateBeamsColumnsBracesForm.DistanceTextBox_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
 <summary>
 verify the distance
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.CreateBeamsColumnsBracesForm.XTextBox_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
 <summary>
 verify the number of X direction
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.CreateBeamsColumnsBracesForm.YTextBox_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
 <summary>
 verify the number of Y direction
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:Revit.SDK.Samples.CreateBeamsColumnsBraces.VB.NET.CreateBeamsColumnsBracesForm.floornumberTextBox_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
 <summary>
 verify the number of floors
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
</members>
</doc>
